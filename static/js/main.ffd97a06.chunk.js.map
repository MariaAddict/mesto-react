{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","api","url","headers","this","_url","_headers","fetch","method","then","res","ok","json","Promise","reject","status","card","body","JSON","stringify","name","link","id","userInfo","about","activity","cardId","like","input","avatar","all","getInitialCards","getUserInfo","authorization","Card","props","onClick","onCardClick","type","likes","length","Main","React","useState","userName","setuserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","dataUser","dataCards","catch","err","console","log","onEditAvatar","onEditProfile","onAddPlace","map","key","_id","Footer","PopupWithForm","isOpen","title","action","children","onClose","ImagePopup","hasOwnProperty","App","isEditProfilePopupOpen","setisEditProfilePopupOpen","isAddPlacePopupOpen","setisAddPlacePopupOpen","isEditAvatarPopupOpen","setisEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","disabled","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.ffd97a06.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={logo} alt=\"Логотип Mesto\" className=\"header__logo\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","class Api {\r\n    constructor(url, { headers }) {\r\n        this._url = url;\r\n        this._headers = headers;\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._url}cards`, {\r\n            method: 'GET',\r\n            headers: this._headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(res.status);\r\n            })\r\n    }\r\n\r\n    addCard(card) {\r\n        return fetch(`${this._url}cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: card.name,\r\n                link: card.link\r\n            })\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(res.status);\r\n        })\r\n    }\r\n\r\n    deleteCard(id) {\r\n        return fetch(`${this._url}cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(res.status);\r\n        });\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: 'GET',\r\n            headers: this._headers\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(res.status);\r\n        })\r\n    }\r\n\r\n    editUserInfo(userInfo) {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: userInfo.name,\r\n                about: userInfo.activity\r\n            })\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(res.status);\r\n        });\r\n    }\r\n\r\n    Like(cardId, like) {\r\n        return fetch(`${this._url}cards/likes/${cardId}`, {\r\n            method: like ? 'PUT' : 'DELETE',\r\n            headers: this._headers\r\n        }\r\n        ).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(res.status);\r\n        });\r\n    }\r\n\r\n    changeAvatar(input) {\r\n        return fetch(`${this._url}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: input.link\r\n            })\r\n        }\r\n        ).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(res.status);\r\n        });\r\n    }\r\n\r\n    getAppInfo() {\r\n        return Promise.all([this.getInitialCards(), this.getUserInfo()]);\r\n    }\r\n}\r\n\r\n//создание api\r\nconst api = new Api('https://mesto.nomoreparties.co/v1/cohort-15/', {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: 'e7e08b6b-adf3-43f0-9ed1-13df27223916'\r\n    }\r\n});\r\n\r\nexport default api;","import React from 'react';\r\n\r\nfunction Card(props) {\r\n    function handleClick() {\r\n        props.onCardClick(props);\r\n    }\r\n\r\n    return (\r\n        <li className=\"cards__item\">\r\n            <img src={props.link} alt={props.name} className=\"cards__image\" onClick={handleClick} />\r\n            <div className=\"cards__description\">\r\n                <h3 className=\"cards__title\">{props.name}</h3>\r\n                <div className=\"cards__likes\">\r\n                    <button type=\"button\" className=\"cards__like\"></button>\r\n                    <p className=\"cards__number-of-likes\">{props.likes.length}</p>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" className=\"cards__delete\"></button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport api from '../utils/api';\r\nimport Card from './Card';\r\n\r\n\r\nfunction Main(props) {\r\n\r\n    const [userName, setuserName] = React.useState('');\r\n    const [userDescription, setUserDescription] = React.useState('');\r\n    const [userAvatar, setUserAvatar] = React.useState('');\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        Promise.all([api.getUserInfo(), api.getInitialCards()]).then(([dataUser, dataCards]) => {\r\n            setuserName(dataUser.name);\r\n            setUserDescription(dataUser.about);\r\n            setUserAvatar(dataUser.avatar);\r\n            setCards(dataCards);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n    \r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__overlay\" onClick={props.onEditAvatar}>\r\n                    <img src={userAvatar} alt=\"Фото профиля\" className=\"profile__image\" />\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <h1 className=\"profile__name\">{userName}</h1>\r\n                    <button type=\"button\" className=\"profile__info-button\" onClick={props.onEditProfile} ></button>\r\n                    <p className=\"profile__activity-type\">{userDescription}</p>\r\n                </div>\r\n                <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n\r\n            <section>\r\n                <ul className=\"cards\">\r\n                    {cards.map((card) =>\r\n                        <Card key={card._id} {...card} onCardClick={props.onCardClick} />\r\n                    )}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&COPY; 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <div className={`modal modal_type_${props.name} ${props.isOpen ? ('modal_opened') : ('')}`}>\r\n            <div className=\"modal__container\">\r\n                <h2 className=\"modal__title\">{props.title}</h2>\r\n                <form action=\"#\" name=\"modal-form\" className={`modal__form modal__container_type_${props.name}`}>\r\n                    {props.children}\r\n                </form>\r\n                <button type=\"button\" className=\"modal__close-button\" onClick={props.onClose}></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <div className={`modal modal_type_figure ${props.hasOwnProperty('link') ? 'modal_opened' : ''}`}>\r\n            <div className=\"modal__container modal__container_type_image\">\r\n                <figure className=\"modal__figure\">\r\n                    <img src={props.link} alt={props.name} className=\"modal__image\" />\r\n                    <figcaption className=\"modal__caption\">{props.name}</figcaption>\r\n                </figure>\r\n                <button type=\"button\" className=\"modal__close-button\" onClick={props.onClose}></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm'\nimport ImagePopup from './ImagePopup'\n\nfunction App() {\n    const [isEditProfilePopupOpen, setisEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setisAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setisEditAvatarPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({});\n\n    function handleEditAvatarClick() {\n        setisEditAvatarPopupOpen(true);\n    }\n    function handleEditProfileClick() {\n        setisEditProfilePopupOpen(true);\n    }\n    function handleAddPlaceClick() {\n        setisAddPlacePopupOpen(true);\n    }\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n    function closeAllPopups() {\n        setisAddPlacePopupOpen(false);\n        setisEditProfilePopupOpen(false);\n        setisEditAvatarPopupOpen(false);\n        setSelectedCard({});\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"page\">\n                <Header />\n                <Main\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick}\n                />\n\n                <Footer />\n\n                <PopupWithForm name='edit' title='Редактировать профиль' isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\n                    <input type=\"text\" name=\"name\" className=\"modal__item modal__item_type_name\" placeholder=\"Имя профиля\" />\n                    <span className=\"modal__error modal__error_visible\" id=\"label-error\"></span>\n                    <input type=\"text\" name=\"activity\" className=\"modal__item modal__item_type_activity-type\" placeholder=\"О себе\" />\n                    <span className=\"modal__error modal__error_visible\" id=\"activity-error\"></span>\n                    <button type=\"submit\" className=\"modal__save-button\"><span className=\"modal__name-button\">Сохранить</span></button>\n                </PopupWithForm>\n                <PopupWithForm name='add' title='Новое место' isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n                    <input type=\"text\" name=\"name\" className=\"modal__item modal__item_type_header-image\" placeholder=\"Название\" id=\"name\" />\n                    <span className=\"modal__error modal__error_visible\" id=\"name-error\"></span>\n                    <input type=\"url\" name=\"link\" className=\"modal__item modal__item_type_url-image\" placeholder=\"Ссылка на картинку\" id=\"url\" />\n                    <span className=\"modal__error modal__error_visible\" id=\"url-error\"></span>\n                    <button type=\"submit\" className=\"modal__save-button\" disabled><span className=\"modal__name-button\">Создать</span></button>\n                </PopupWithForm>\n                <PopupWithForm name='avatar' title='Обновить аватар' isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n                    <input type=\"url\" name=\"link\" className=\"modal__item modal__item_type_url-image\" placeholder=\"Ссылка на картинку\" id=\"url\" />\n                    <span className=\"modal__error modal__error_visible\" id=\"url-error\"></span>\n                    <button type=\"submit\" className=\"modal__save-button\"><span className=\"modal__name-button\">Сохранить</span></button>\n                </PopupWithForm>\n                {/* <PopupWithForm name='check' title='Вы уверены?' isOpen={isEditAvatarPopupOpen}>\n                    <input type=\"url\" name=\"link\" className=\"modal__item modal__item_type_url-image\" placeholder=\"Ссылка на картинку\" id=\"url\" autocomplete=\"off\" required />\n                    <span className=\"modal__error modal__error_visible\" id=\"url-error\"></span>\n                    <button type=\"submit\" className=\"modal__save-button\"><span className=\"modal__name-button\">Сохранить</span></button>\n                </PopupWithForm> */}\n                <ImagePopup {...selectedCard} onClose={closeAllPopups} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}