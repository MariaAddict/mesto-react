{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","item","link","name","onClick","onCardClick","type","onCardLike","length","onCardDelete","Main","userData","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","card","key","Footer","ImagePopup","hasOwnProperty","onClose","handleResponse","res","ok","json","Promise","reject","status","api","url","headers","this","_url","_headers","fetch","method","then","body","JSON","stringify","id","userInfo","cardId","like","input","all","getInitialCards","getUserInfo","authorization","PopupWithForm","isOpen","title","action","onSubmit","children","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","placeholder","value","onChange","e","target","EditAvatarPopup","onUpdateAvatar","refAvatarUrl","useRef","current","ref","AddPlacePopup","setLink","App","isEditProfilePopupOpen","setisEditProfilePopupOpen","isAddPlacePopupOpen","setisAddPlacePopupOpen","isEditAvatarPopupOpen","setisEditAvatarPopupOpen","selectedCard","setSelectedCard","cohort","setCurrentUser","setCards","closeAllPopups","dataUser","dataCards","catch","err","console","log","Provider","deleteCard","newCards","filter","c","i","changeLike","newCard","data","editUserInfo","changeAvatar","addCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.f17ea53c.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={logo} alt=\"Логотип Mesto\" className=\"header__logo\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isOwn = (props.owner._id === currentUser._id);\r\n    const isLiked = props.likes.some((item) => item._id === currentUser._id);\r\n\r\n    function handleClick() {\r\n        props.onCardClick(props);\r\n    }\r\n\r\n    const handleLikeClick = () => {\r\n        props.onCardLike(props);\r\n    }\r\n\r\n    const handleDeleteClick = () => {\r\n        props.onCardDelete(props);\r\n    }\r\n\r\n    return (\r\n        <li className=\"cards__item\">\r\n            <img src={props.link} alt={props.name} className=\"cards__image\" onClick={handleClick} />\r\n            <div className=\"cards__description\">\r\n                <h3 className=\"cards__title\">{props.name}</h3>\r\n                <div className=\"cards__likes\">\r\n                    <button type=\"button\" onClick={handleLikeClick} className={`cards__like ${isLiked ? 'card__like_pressed' : ''}`}></button>\r\n                    <p className=\"cards__number-of-likes\">{props.likes.length}</p>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" className={`cards__delete ${isOwn ? '' : 'cards__delete_hidden'}`} onClick = {handleDeleteClick}></button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Main(props) {\r\n\r\n    const userData = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__overlay\" onClick={props.onEditAvatar}>\r\n                    <img src={userData.avatar} alt=\"Фото профиля\" className=\"profile__image\" />\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <h1 className=\"profile__name\">{userData.name}</h1>\r\n                    <button type=\"button\" className=\"profile__info-button\" onClick={props.onEditProfile} ></button>\r\n                    <p className=\"profile__activity-type\">{userData.about}</p>\r\n                </div>\r\n                <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n\r\n            <section>\r\n                <ul className=\"cards\">\r\n                    {props.cards.map((card) =>\r\n                        <Card key={card._id} {...card} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} />\r\n                    )}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&COPY; 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <div className={`modal modal_type_figure ${props.hasOwnProperty('link') ? 'modal_opened' : ''}`}>\r\n            <div className=\"modal__container modal__container_type_image\">\r\n                <figure className=\"modal__figure\">\r\n                    <img src={props.link} alt={props.name} className=\"modal__image\" />\r\n                    <figcaption className=\"modal__caption\">{props.name}</figcaption>\r\n                </figure>\r\n                <button type=\"button\" className=\"modal__close-button\" onClick={props.onClose}></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","const handleResponse = res => {\r\n    if (res.ok) {\r\n        return res.json();\r\n    }\r\n    return Promise.reject(res.status);\r\n}\r\n\r\nclass Api {\r\n    constructor(url, { headers }) {\r\n        this._url = url;\r\n        this._headers = headers;\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._url}cards`, {\r\n            method: 'GET',\r\n            headers: this._headers\r\n        })\r\n            .then(handleResponse)\r\n    }\r\n\r\n    addCard(card) {\r\n        return fetch(`${this._url}cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: card.name,\r\n                link: card.link\r\n            })\r\n        }).then(handleResponse)\r\n    }\r\n\r\n    deleteCard(id) {\r\n        return fetch(`${this._url}cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        }).then(handleResponse)\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: 'GET',\r\n            headers: this._headers\r\n        }).then(handleResponse)\r\n    }\r\n\r\n    editUserInfo(userInfo) {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: userInfo.name,\r\n                about: userInfo.about\r\n            })\r\n        }).then(handleResponse)\r\n    }\r\n\r\n    changeLike(cardId, like) {\r\n        return fetch(`${this._url}cards/likes/${cardId}`, {\r\n            method: like ? 'PUT' : 'DELETE',\r\n            headers: this._headers\r\n        }\r\n        ).then(handleResponse)\r\n    }\r\n\r\n    changeAvatar(input) {\r\n        return fetch(`${this._url}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: input.avatar\r\n            })\r\n        }\r\n        ).then(handleResponse)\r\n    }\r\n\r\n    getAppInfo() {\r\n        return Promise.all([this.getInitialCards(), this.getUserInfo()]);\r\n    }\r\n}\r\n\r\n//создание api\r\nconst api = new Api('https://mesto.nomoreparties.co/v1/cohort-15/', {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: 'e7e08b6b-adf3-43f0-9ed1-13df27223916'\r\n    }\r\n});\r\n\r\nexport default api;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <div className={`modal modal_type_${props.name} ${props.isOpen ? ('modal_opened') : ('')}`}>\r\n            <div className=\"modal__container\">\r\n                <h2 className=\"modal__title\">{props.title}</h2>\r\n                <form action=\"#\" name=\"modal-form\" className={`modal__form modal__container_type_${props.name}`} onSubmit={props.onSubmit} >\r\n                    {props.children}\r\n                </form>\r\n                <button type=\"button\" className=\"modal__close-button\" onClick={props.onClose}></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleChangeDescription(e) {\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n\r\n        onUpdateUser({\r\n            name: name,\r\n            about: description,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name='edit' title='Редактировать профиль' isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} >\r\n            <input type=\"text\" name=\"name\" className=\"modal__item modal__item_type_name\"\r\n                placeholder=\"Имя профиля\" value={name} onChange={handleChangeName}  />\r\n            <span className=\"modal__error modal__error_visible\" id=\"label-error\"></span>\r\n            <input type=\"text\" name=\"activity\" className=\"modal__item modal__item_type_activity-type\"\r\n                placeholder=\"О себе\" value={description} onChange={handleChangeDescription}  />\r\n            <span className=\"modal__error modal__error_visible\" id=\"activity-error\"></span>\r\n            <button type=\"submit\" className=\"modal__save-button\"><span className=\"modal__name-button\">Сохранить</span></button>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar}) {\r\n    const refAvatarUrl = React.useRef();\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n\r\n        onUpdateAvatar({\r\n            avatar: refAvatarUrl.current.value\r\n        });\r\n        refAvatarUrl.current.value = '';\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name='avatar' title='Обновить аватар' isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}>\r\n            <input ref ={refAvatarUrl} type=\"url\" name=\"link\" className=\"modal__item modal__item_type_url-image\" placeholder=\"Ссылка на картинку\" id=\"url\" />\r\n            <span className=\"modal__error modal__error_visible\" id=\"url-error\"></span>\r\n            <button type=\"submit\" className=\"modal__save-button\"><span className=\"modal__name-button\">Сохранить</span></button>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n    const [name, setName] = React.useState('');\r\n    const [link, setLink] = React.useState('');\r\n\r\n    function handleNewName(evt) {\r\n        setName(evt.target.value);\r\n    }\r\n\r\n    function handleNewLink(evt) {\r\n        setLink(evt.target.value);\r\n    }\r\n\r\n    function handleAddPlacePopupSubmit(evt) {\r\n        evt.preventDefault();\r\n        onAddPlace({ name, link });\r\n        setName('');\r\n        setLink('');\r\n    }\r\n\r\n\r\n    return (\r\n        <PopupWithForm name='add' title='Новое место' isOpen={isOpen} onClose={onClose} onSubmit={handleAddPlacePopupSubmit} >\r\n            <input type=\"text\" name=\"name\" className=\"modal__item modal__item_type_header-image\" placeholder=\"Название\" id=\"name\"\r\n                onChange={handleNewName} value={name} />\r\n            <span className=\"modal__error modal__error_visible\" id=\"name-error\"></span>\r\n            <input type=\"url\" name=\"link\" className=\"modal__item modal__item_type_url-image\" placeholder=\"Ссылка на картинку\"\r\n                id=\"url\" onChange={handleNewLink} value={link} />\r\n            <span className=\"modal__error modal__error_visible\" id=\"url-error\"></span>\r\n            <button type=\"submit\" className=\"modal__save-button\"><span className=\"modal__name-button\">Создать</span></button>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nAddPlacePopup.propTypes = {\r\n    isOpen: PropTypes.bool,\r\n    onClose: PropTypes.func.isRequired,\r\n    onAddPlace: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ImagePopup from './ImagePopup';\r\nimport api from '../utils/api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\n\r\nfunction App() {\r\n    const [isEditProfilePopupOpen, setisEditProfilePopupOpen] = React.useState(false);\r\n    const [isAddPlacePopupOpen, setisAddPlacePopupOpen] = React.useState(false);\r\n    const [isEditAvatarPopupOpen, setisEditAvatarPopupOpen] = React.useState(false);\r\n    const [selectedCard, setSelectedCard] = React.useState({});\r\n    const [currentUser, setCurrentUser] = React.useState({about: '',avatar: '', cohort: '',name: '', _id: ''});\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        Promise.all([api.getUserInfo(), api.getInitialCards()]).then(([dataUser, dataCards]) => {\r\n            setCurrentUser(dataUser);\r\n            setCards(dataCards);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n\r\n\r\n    function handleEditAvatarClick() {\r\n        setisEditAvatarPopupOpen(true);\r\n    }\r\n    function handleEditProfileClick() {\r\n        setisEditProfilePopupOpen(true);\r\n    }\r\n    function handleAddPlaceClick() {\r\n        setisAddPlacePopupOpen(true);\r\n    }\r\n    function handleCardClick(card) {\r\n        setSelectedCard(card);\r\n    }\r\n    function closeAllPopups() {\r\n        setisAddPlacePopupOpen(false);\r\n        setisEditProfilePopupOpen(false);\r\n        setisEditAvatarPopupOpen(false);\r\n        setSelectedCard({});\r\n    }\r\n    function handleUpdateUser(data) {\r\n        api.editUserInfo(data).then((res) => {\r\n            setCurrentUser(res);\r\n            setisEditProfilePopupOpen(false);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    function handleUpdateAvatar(data) {\r\n        api.changeAvatar(data).then((avatar) => {\r\n            setCurrentUser(avatar);\r\n            setisEditAvatarPopupOpen(false);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    function handleCardLike(card) {\r\n        const isLiked = card.likes.some((i) =>  i._id === currentUser._id);\r\n\r\n        api.changeLike(card._id, !isLiked).then((newCard) => {\r\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n            setCards(newCards);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    function handleCardDelete(card) {\r\n        api.deleteCard(card._id).then(() => {\r\n            const newCards = cards.filter((c) => !(c._id === card._id ));            \r\n            setCards(newCards);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    function handleAddPlaceSubmit(card) {\r\n        api.addCard(card).then((newCard) => {\r\n            setCards([newCard, ...cards ]); \r\n            setisAddPlacePopupOpen(false);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        < CurrentUserContext.Provider value={currentUser}>\r\n            <div className=\"App\">\r\n                <div className=\"page\">\r\n                    <Header />\r\n                    <Main\r\n                        onEditProfile={handleEditProfileClick}\r\n                        onAddPlace={handleAddPlaceClick}\r\n                        onEditAvatar={handleEditAvatarClick}\r\n                        onCardClick={handleCardClick}\r\n                        onCardDelete={handleCardDelete}\r\n                        onCardLike={handleCardLike}\r\n                        cards={cards}\r\n                    />\r\n\r\n                    <Footer />\r\n\r\n                    <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n                    <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n                    <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\r\n                    <ImagePopup {...selectedCard} onClose={closeAllPopups} />\r\n                </div>\r\n            </div>\r\n        </ CurrentUserContext.Provider >\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}